?RCS: $Id: libs.U,v 3.0.1.6 1997/02/28 16:09:11 ram Exp $
?RCS:
?RCS: Copyright (c) 1991-1993, Raphael Manfredi
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 3.0.
?RCS:
?RCS: $Log: libs.U,v $
?RCS: Revision 3.0.1.6  1997/02/28  16:09:11  ram
?RCS: patch61: replaced .a with $_a all over the place
?RCS:
?RCS: Revision 3.0.1.5  1995/07/25  14:12:05  ram
?RCS: patch56: now knows about OS/2 platforms
?RCS:
?RCS: Revision 3.0.1.4  1994/10/29  16:24:22  ram
?RCS: patch36: removed old broken thislib/thatlib processing (ADO)
?RCS:
?RCS: Revision 3.0.1.3  1994/06/20  07:05:44  ram
?RCS: patch30: code cleanup with if/elif by ADO and RAM
?RCS: patch30: undone patch23 for libswanted default setting
?RCS:
?RCS: Revision 3.0.1.2  1994/05/06  15:08:45  ram
?RCS: patch23: now includes ordered default libswanted variable (ADO)
?RCS: patch23: major cleanup for library lookups (ADO)
?RCS:
?RCS: Revision 3.0.1.1  1993/08/25  14:02:31  ram
?RCS: patch6: added default for libs
?RCS:
?RCS: Revision 3.0  1993/08/18  12:09:03  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:libs ignore_versioned_solibs libsfound libsfiles libsdirs libspath: \
	test cat Myread Oldconfig Loc libpth package xlibpth so _a \
	usesocks sed uselongdouble
?MAKE:	-pick add $@ %<
?S:libs:
?S:	This variable holds the additional libraries we want to use.
?S:	It is up to the Makefile to deal with it.  The list can be empty.
?S:.
?S:libsfound:
?S:	This variable holds the full pathnames of the libraries
?S:	we found and accepted.
?S:.
?S:libsfiles:
?S:	This variable holds the filenames aka basenames of the libraries
?S:	we found and accepted.
?S:.
?S:libsdirs:
?S:	This variable holds the directory names aka dirnames of the libraries
?S:	we found and accepted, duplicates are removed.
?S:.
?S:libspath:
?S:	This variable holds the directory names probed for libraries.
?S:.
?S:ignore_versioned_solibs:
?S:	This variable should be non-empty if non-versioned shared
?S:	libraries (libfoo.so.x.y) are to be ignored (because they
?S:	cannot be linked against).
?S:.
?T:xxx yyy thislib thisdir libswanted libstyle
?D:libs=''
?X:
?X: This order is chosen so that libraries  -lndir, -ldir, -lucb, -lbsd,
?X: -lBSD, -lPW, and -lx only get used if there are unresolved
?X: routines at link time.  Usually, these are backwards compatibility
?X: libraries, and may not be as reliable as the standard c library.
?X:
?X: The -lsocket -linet -lnsl order has been reported to be necessary
?X: for at least one SVR4 implementation.
?X: -lc must proceed -lucb or -lbsd for most Solaris applications.
?X: -lc_s proceeds -lc so we pick up the shared library version, if
?X: it is available.
?X:
?X: The ordering of c, posix, and cposix is a guess and almost
?X: certainly wrong on about half of all systems.
?X:
?X: Set proper libswanted in your private Myinit.U if needed.
?X:
?X:: default ordered library list
?X:libswanted='net socket inet bind nsl nm sdbm gdbm ndbm dbm malloc dl'
?X:libswanted="$libswanted dld sun m c_s c posix cposix ndir dir ucb"
?X:libswanted="$libswanted bsd BSD PW x"
?X:
?INIT:: default library list
?INIT:libswanted=''
?INIT:: some systems want to use only the non-versioned libso:s
?INIT:ignore_versioned_solibs=''
?LINT:extern usecbacktrace
?LINT:extern libscheck
?LINT:extern p
?LINT:use uselongdouble
: Looking for optional libraries
echo " "
echo "Checking for optional libraries..." >&4
case "$libs" in
' '|'') dflt='';;
*) dflt="$libs";;
esac
case "$libswanted" in
'') libswanted='c_s';;
esac
?X: libsocks has nasty naming scheme.
?X: This does not work if somebody wants SOCKS 4.
case "$usesocks" in
"$define") libswanted="$libswanted socks5 socks5_sh" ;;
esac
case "$usecbacktrace" in
"$define") libswanted="$libswanted bfd" ;;
esac
libsfound=''
libsfiles=''
libsdirs=''
libspath=''
for thisdir in $libpth $xlibpth; do
  test -d $thisdir && libspath="$libspath $thisdir"
done
for thislib in $libswanted; do
	for thisdir in $libspath; do
	    xxx=''
	    if $test ! -f "$xxx" -a "X$ignore_versioned_solibs" = "X"; then
		xxx=`ls $thisdir/lib$thislib.$so.[0-9] 2>/dev/null|sed -n '$p'`
	        $test -f "$xxx" && eval $libscheck
		$test -f "$xxx" && libstyle=shared
		xxx=`ls $thisdir/lib$thislib.[0-9].$so 2>/dev/null|sed -n '$p'`
	        $test -f "$xxx" && eval $libscheck
		$test -f "$xxx" && libstyle=shared
	    fi
	    if test ! -f "$xxx"; then
		xxx=$thisdir/lib$thislib.$so
	        $test -f "$xxx" && eval $libscheck
		$test -f "$xxx" && libstyle=shared
	    fi
	    if test ! -f "$xxx"; then
		xxx=$thisdir/lib$thislib$_a
	        $test -f "$xxx" && eval $libscheck
		$test -f "$xxx" && libstyle=static
	    fi
	    if test ! -f "$xxx"; then
		xxx=$thisdir/$thislib$_a
	        $test -f "$xxx" && eval $libscheck
		$test -f "$xxx" && libstyle=static
	    fi
	    if test ! -f "$xxx"; then
		xxx=$thisdir/lib${thislib}_s$_a
	        $test -f "$xxx" && eval $libscheck
		$test -f "$xxx" && libstyle=static
		$test -f "$xxx" && thislib=${thislib}_s
	    fi
	    if test ! -f "$xxx"; then
		xxx=$thisdir/Slib$thislib$_a
	        $test -f "$xxx" && eval $libscheck
		$test -f "$xxx" && libstyle=static
	    fi
	    if $test -f "$xxx"; then
		case "$libstyle" in
		shared) echo "Found -l$thislib (shared)." ;;
		static) echo "Found -l$thislib." ;;
		*)      echo "Found -l$thislib ($libstyle)." ;;
		esac
		case " $dflt " in
		*"-l$thislib "*);;
		*) dflt="$dflt -l$thislib"
                   libsfound="$libsfound $xxx"
                   yyy=`basename $xxx`
                   libsfiles="$libsfiles $yyy"
                   yyy=`echo $xxx|$sed -e "s%/$yyy\\$%%"`
                   case " $libsdirs " in
                   *" $yyy "*) ;;
                   *) libsdirs="$libsdirs $yyy" ;;
                   esac
		   ;;
		esac
		break
	    fi
	done
	if $test ! -f "$xxx"; then
	    echo "No -l$thislib."
	fi
done
set X $dflt
shift
dflt="$*"
case "$libs" in
'') dflt="$dflt";;
*) dflt="$libs";;
esac
case "$dflt" in
' '|'') dflt='none';;
esac

$cat <<EOM

In order to compile $package on your machine, a number of libraries
are usually needed.  Include any other special libraries here as well.
Say "none" for none.  The default list is almost always right.
EOM

echo " "
rp="What libraries to use?"
. ./myread
case "$ans" in
none) libs=' ';;
*) libs="$ans";;
esac

